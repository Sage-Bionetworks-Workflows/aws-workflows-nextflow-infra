AWSTemplateFormatVersion: 2010-09-09
Description: An S3 bucket readable by the account only

Transform: S3Objects

Parameters:
  BucketName:
    Type: String
    Description: Name of the created bucket.

  GitHubUsername:
    Type: String
    Description: Username of GitHub service account
    NoEcho: "true"

  GitHubPassword:
    Type: String
    Description: Password of GitHub service account
    NoEcho: "true"

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowRead"
            Effect: "Allow"
            Principal:
              AWS: !Sub "${AWS::AccountId}"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${Bucket}/*"

  TowerConfigFile:
    Type: AWS::S3::Object
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3001
    Properties:
      Target:
        Bucket: !Ref Bucket
        Key: tower.yaml
        ContentType: text
      Body: !Sub |
        tower:
          auth:
            google:
              allow-list:
                - "*@sagebase.org"
                - "*@sagebionetworks.org"
                - "artem.sokolov@gmail.com"
                - "clarenceyapp111@gmail.com"
                - "jmuhlich@gmail.com"
          trustedEmails:
            - "benjamin_vincent@med.unc.edu"
            - "dbortone@email.unc.edu"
            - "steven_vensko@med.unc.edu"
          scm:
            providers:
              github:
                user: ${GitHubUsername}
                password: ${GitHubPassword}

Outputs:
  BucketName:
    Value: !Ref Bucket
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-BucketName"

  BucketArn:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-BucketArn"
